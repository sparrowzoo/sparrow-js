(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6456],{8267:function(s,n,i){Promise.resolve().then(i.bind(i,38463))},38463:function(s,n,i){"use strict";i.r(n),i.d(n,{default:function(){return c}});var t=i(57437);function c(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("h2",{children:"utility-first 优先级最高"}),(0,t.jsx)("p",{children:"https://tailwindcss.com/docs/utility-first"}),(0,t.jsx)("br",{}),(0,t.jsx)("h2",{children:"base 兜底优先级最低"}),(0,t.jsx)("p",{children:"https://tailwindcss.com/docs/preflight"}),(0,t.jsx)("br",{}),(0,t.jsx)("h2",{children:"components 优先级居中"}),(0,t.jsx)("br",{}),(0,t.jsx)("h2",{children:"函数和指令说明"}),(0,t.jsx)("p",{children:"https://tailwindcss.com/docs/functions-and-directives"}),(0,t.jsx)("p",{className:"content",children:"使用说明文档 https://www.tailwindcss.cn/docs/installation 其中 tailwind base 相当于一份重置样式表，包含了最基础的样式。 tailwind components 包含了一些组件类， 组件相当于复合样式， tailwind utilities 包含了工具类，也就是 flex mx-auto 这些内置样式。 这么划分的原因是因为 css 的优先级规则，tailwindcss 全部都是一级样式， 在类名权重相等的情况，下面的样式可以覆盖上面的样式， 所以工具类优先， 组件类次之， 基础样式兜底，生成的样式顺序尤为重要，所以 上面三句指令的顺序非必须建议不要修改。"})]})}i(2265),i(33615)},33615:function(){}},function(s){s.O(0,[8888,2971,7023,1744],function(){return s(s.s=8267)}),_N_E=s.O()}]);