(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7880],{69820:function(e,o,n){Promise.resolve().then(n.bind(n,61666))},61666:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return t}});var s=n(57437),l=n(2265);function t(){let e=async e=>{console.log("获取远程数据");try{let o=new Promise((o,n)=>{try{setTimeout(()=>(console.log("数据已拿到"),o({id:1,title:e,completed:!0,userId:1})),2e3),console.log("异步执行完成")}catch(e){return console.log(e),n(e.message)}}),n=await o;console.log("这时会waiting 等待数据返回"),t(n)}catch(e){console.log(e.message)}};async function o(o){await e(o),console.log("这里可以await"),console.log("这里可以await")}let[n,t]=(0,l.useState)(),[c,i]=(0,l.useState)();return(0,l.useEffect)(()=>(console.log("页面初始化"),o("this is sync promise demo"),console.log("这里没有办法await"),()=>{console.log("页面卸载")}),[]),(0,s.jsxs)("div",{children:[(0,s.jsx)("h1",{children:"Page"}),c&&(0,s.jsx)("p",{children:c}),(0,s.jsxs)("p",{children:[null==n?void 0:n.title,(0,s.jsx)("br",{}),null==n?void 0:n.userId,(0,s.jsx)("br",{}),null==n?void 0:n.id,(0,s.jsx)("br",{}),null==n?void 0:n.completed,(0,s.jsx)("br",{})]})]})}}},function(e){e.O(0,[2971,7023,1744],function(){return e(e.s=69820)}),_N_E=e.O()}]);