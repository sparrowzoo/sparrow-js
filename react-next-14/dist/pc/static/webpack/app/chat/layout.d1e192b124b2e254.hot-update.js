"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/layout",{

/***/ "(app-pages-browser)/./src/lib/protocol/Protocol.ts":
/*!**************************************!*\
  !*** ./src/lib/protocol/Protocol.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_protocol_ChatUser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/protocol/ChatUser */ \"(app-pages-browser)/./src/lib/protocol/ChatUser.ts\");\n/* harmony import */ var _lib_protocol_ChatSession__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/protocol/ChatSession */ \"(app-pages-browser)/./src/lib/protocol/ChatSession.ts\");\n/* harmony import */ var _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/protocol/ArrayBufferUtils */ \"(app-pages-browser)/./src/lib/protocol/ArrayBufferUtils.ts\");\n/* harmony import */ var _lib_protocol_Chat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/protocol/Chat */ \"(app-pages-browser)/./src/lib/protocol/Chat.ts\");\n\n\n\n\nclass Protocol {\n    get version() {\n        return this._version;\n    }\n    set version(value) {\n        this._version = value;\n    }\n    get messageType() {\n        return this._messageType;\n    }\n    set messageType(value) {\n        this._messageType = value;\n    }\n    get chatType() {\n        return this._chatType;\n    }\n    set chatType(value) {\n        this._chatType = value;\n    }\n    get sender() {\n        return this._sender;\n    }\n    set sender(value) {\n        this._sender = value;\n    }\n    get receiver() {\n        return this._receiver;\n    }\n    set receiver(value) {\n        this._receiver = value;\n    }\n    get chatSession() {\n        return this._chatSession;\n    }\n    set chatSession(value) {\n        this._chatSession = value;\n    }\n    get content() {\n        return this._content;\n    }\n    set content(value) {\n        this._content = value;\n    }\n    get clientSendTime() {\n        return this._clientSendTime;\n    }\n    set clientSendTime(value) {\n        this._clientSendTime = value;\n    }\n    get serverTime() {\n        return this._serverTime;\n    }\n    set serverTime(value) {\n        this._serverTime = value;\n    }\n    static fromBytes(bytes) {\n        const protocol = new Protocol();\n        const dataView = new DataView(bytes);\n        let offset = 0;\n        protocol.version = dataView.getUint8(offset);\n        const chatType = dataView.getUint8(offset + 1);\n        protocol.chatType = chatType;\n        const messageType = dataView.getUint8(offset + 2);\n        protocol.messageType = messageType;\n        const senderWithOffset = _lib_protocol_ChatUser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromBytes(dataView, offset + 3);\n        protocol.sender = senderWithOffset.chatUser;\n        offset = senderWithOffset.offset;\n        if (chatType === _lib_protocol_Chat__WEBPACK_IMPORTED_MODULE_3__[\"default\"].CHAT_TYPE_1_TO_1) {\n            const receiverWithOffset = _lib_protocol_ChatUser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromBytes(dataView, offset);\n            const receiver = receiverWithOffset.chatUser;\n            protocol.receiver = receiver;\n            offset = receiverWithOffset.offset;\n            protocol.chatSession = _lib_protocol_ChatSession__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create121Session(protocol.sender, protocol.receiver);\n        } else {\n            const sessionLength = dataView.getUint8(offset);\n            offset += 1;\n            const sessionBytes = new Uint8Array(bytes.slice(offset, offset + sessionLength));\n            const session = sessionBytes.toString();\n            protocol.chatSession = _lib_protocol_ChatSession__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createGroupSession(session);\n        }\n        const contentLength = dataView.getUint32(offset);\n        offset += 4;\n        protocol.content = new Uint8Array(bytes.slice(offset, offset + contentLength));\n        offset += contentLength;\n        const clientSendTime = new TextDecoder().decode(new Uint8Array(bytes.slice(offset, bytes.byteLength))); // 默认 UTF-8 编码\n        protocol.clientSendTime = parseInt(clientSendTime, 10);\n        return protocol;\n    }\n    static create121Chat(messageType, receiver, content, clientSendTime) {\n        const protocol = new Protocol();\n        const loginUser = _lib_protocol_ChatUser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCurrentUser();\n        protocol.version = 1;\n        protocol.chatType = _lib_protocol_Chat__WEBPACK_IMPORTED_MODULE_3__[\"default\"].CHAT_TYPE_1_TO_1;\n        protocol.messageType = messageType;\n        protocol.sender = loginUser;\n        protocol.receiver = receiver;\n        protocol.chatSession = _lib_protocol_ChatSession__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create121Session(protocol.sender, receiver);\n        protocol.content = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].str2Buffer(content);\n        protocol.clientSendTime = clientSendTime;\n        return protocol;\n    }\n    toBytes() {\n        if (this.chatType === _lib_protocol_Chat__WEBPACK_IMPORTED_MODULE_3__[\"default\"].CHAT_TYPE_1_TO_1) {\n            return this.to121Bytes();\n        }\n        return this.toGroupBytes();\n    }\n    to121Bytes() {\n        const headerLength = 3;\n        const senderBytes = this.sender.toBytes();\n        const receiverBytes = this.receiver.toBytes();\n        const contentLength = 4;\n        const clientSendTimeBytes = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].str2Buffer(this.clientSendTime + \"\");\n        const capacity = headerLength + senderBytes.byteLength + receiverBytes.byteLength + contentLength + this.content.byteLength + clientSendTimeBytes.byteLength;\n        let offset = 0;\n        let protocol = new Uint8Array(capacity);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, new Uint8Array([\n            this._version,\n            this.chatType,\n            this.messageType\n        ]), offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, senderBytes, offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, receiverBytes, offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].number2Buffer(this.content.byteLength), offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, this.content, offset);\n        _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, clientSendTimeBytes, offset);\n        return protocol;\n    }\n    toGroupBytes() {\n        let offset = 0;\n        const headerLength = 3;\n        const senderBytes = this.sender.toBytes();\n        const sessionLength = 1;\n        const sessionBytes = this.chatSession.toBytes();\n        const contentLength = 4;\n        const clientSendTimeBytes = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].str2Buffer(this.clientSendTime + \"\");\n        let capacity = headerLength + senderBytes.byteLength + sessionLength + sessionBytes.byteLength + contentLength + this.content.byteLength + clientSendTimeBytes.byteLength;\n        let protocol = new Uint8Array(capacity);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, new Uint8Array([\n            this._version,\n            this.chatType,\n            this.messageType\n        ]), offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, senderBytes, offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, new Uint8Array([\n            sessionBytes.byteLength\n        ]), offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, sessionBytes, offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].number2Buffer(this.content.byteLength), offset);\n        offset = _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, this.content, offset);\n        _lib_protocol_ArrayBufferUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].appendBytes(protocol, clientSendTimeBytes, offset);\n        return protocol;\n    }\n    getStringContent() {\n        return new TextDecoder().decode(this.content); // 默认 UTF-8 编码\n    }\n    constructor(){}\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Protocol);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/protocol/Protocol.ts\n"));

/***/ })

});